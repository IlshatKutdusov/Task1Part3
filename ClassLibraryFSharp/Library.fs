namespace ClassLibraryFSharp

module MyModule =
    let rec QuickSort (arr :  int[]) = //Метод QuickSort, в который передается массив (тип int)
    match arr with //Соответсвие массива шаблонам ниже
    | [||] | [| _ |] -> arr //Возвращение массива, если он пуст или "_" был выполнен полностью

    | _ -> let l, (r, pivots) = 
                Array.partition (fun n -> n < arr.[0]) arr //Разделение массива на два: первый - условие возвращает true, а второй - соответственно, false (условие меньше - для сортировки)
                |> (fun (l, r) -> l, r //Передача двух массивов
                                |> Array.partition (fun n -> n <> arr.[0])) //Снова разделение на два (условие неравен - для равных значений)
           Array.concat <| seq { yield (QuickSort l); yield pivots; yield (QuickSort r) } //Создает массив, из элементов представленной последовательности seq


//  partition - Разбивает массив на два массива, один из которых содержит элементы,
//      для которых предоставленное условие возвращает true, а другой - те, для которых оно возвращает false.
//  concat - Создает массив, содержащий элементы каждой предоставленной последовательности массивов.